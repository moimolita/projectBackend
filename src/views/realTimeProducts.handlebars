<!DOCTYPE html>
<html>
<head>
    <title>Productos en Tiempo Real</title>
    <script src="/socket.io/socket.io.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const socket = io();
            socket.on('updateProducts', (products) => {
                const list = document.getElementById('products-list');
                list.innerHTML = '';
                products.forEach(p => {
                    const li = document.createElement('li');
                    li.textContent = `${p.title} - $${p.price}`;
                    list.appendChild(li);
                });
            });
        });
    </script>
</head>
<body>
    <h1>Productos en Tiempo Real</h1>

    <form id="add-product-form">
        <h2>Agregar Producto</h2>
        <input type="text" name="title" placeholder="Título" required />
        <input type="number" name="price" placeholder="Precio" required />
        <input type="text" name="description" placeholder="Descripción" required />
        <input type="text" name="code" placeholder="Código" required />
        <input type="number" name="stock" placeholder="Stock" required />
        <input type="text" name="category" placeholder="Categoría" required />
        <button type="submit">Agregar</button>
    </form>

    <form id="delete-product-form">
        <h2>Eliminar Producto</h2>
        <input type="text" name="id" placeholder="ID del producto" required />
        <button type="submit">Eliminar</button>
    </form>

    <ul id="products-list">
        {{#each products}}
            <li>
                {{this.title}} - ${{this.price}} (ID: {{this.id}})
                <button class="delete-btn" data-id="{{this.id}}">Eliminar</button>
            </li>
        {{/each}}
    </ul>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const socket = io();
            const addForm = document.getElementById('add-product-form');
            const deleteForm = document.getElementById('delete-product-form');

            addForm.addEventListener('submit', function(e) {
                e.preventDefault();
                const data = Object.fromEntries(new FormData(addForm));
                data.price = Number(data.price);
                data.stock = Number(data.stock);
                socket.emit('newProduct', data);
                addForm.reset();
            });

            deleteForm.addEventListener('submit', function(e) {
                e.preventDefault();
                const id = deleteForm.elements['id'].value;
                socket.emit('deleteProduct', id);
                deleteForm.reset();
            });

            function renderProducts(products) {
                const list = document.getElementById('products-list');
                list.innerHTML = '';
                products.forEach(p => {
                    const li = document.createElement('li');
                    li.innerHTML = `${p.title} - $${p.price} (ID: ${p.id}) <button class="delete-btn" data-id="${p.id}">Eliminar</button>`;
                    list.appendChild(li);
                });
                // Agregar evento a los botones
                document.querySelectorAll('.delete-btn').forEach(btn => {
                    btn.addEventListener('click', function() {
                        const id = this.getAttribute('data-id');
                        socket.emit('deleteProduct', id);
                    });
                });
            }

            socket.on('updateProducts', renderProducts);

            // Render inicial (por si ya hay productos en el contexto)
            const initialProducts = [];
            document.querySelectorAll('#products-list li').forEach(li => {
                const match = li.textContent.match(/ID: (\w+)/);
                if (match) {
                    initialProducts.push({
                        title: li.textContent.split(' - $')[0],
                        price: li.textContent.split(' - $')[1].split(' ')[0],
                        id: match[1]
                    });
                }
            });
            if (initialProducts.length) renderProducts(initialProducts);
        });
    </script>
</body>
</html>
